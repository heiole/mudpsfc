name: Mods Update Release

on:
  push:
    paths:
      - 'mods/**'  # Trigger workflow when any changes happen in the mods folder

permissions:
  contents: write  # Explicitly allow write access to the contents (needed for creating releases)

jobs:
  release-modpack:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set Time Zone and Extract Commit Hash
      - name: Set Time Zone and Extract Commit Hash
        run: |
          export TZ="Europe/Warsaw"
          commit_hash=$(git rev-parse --short HEAD)
          echo "commit_hash=$commit_hash" >> $GITHUB_ENV

      # Step 3: Define Timestamp and Zip the Mods Directory
      - name: Zip Mods Directory
        run: |
          export TZ="Europe/Warsaw"
          timestamp=$(date +"%d.%m.%Y")
          echo "timestamp=$timestamp" >> $GITHUB_ENV
          zip -r -3 mods_$timestamp.zip mods

      # Step 4: Create a Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-${{ env.timestamp }}-${{ env.commit_hash }}"
          release_name: "Mods Update - ${{ env.timestamp }} - ${{ env.commit_hash }}"
          draft: false
          prerelease: false
          body: |
            i ❤️ kenny and ye

      # Step 5: Upload the Zipped Mods Archive
      - name: Upload Mods Archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: mods_${{ env.timestamp }}.zip
          asset_name: mods_${{ env.timestamp }}.zip
          asset_content_type: application/zip
